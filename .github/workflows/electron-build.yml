name: Build Electron App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üõ† Build for x64
        run: npx electron-builder --mac --x64 --publish never
  
      - name: üõ† Build for arm64
        run: npx electron-builder --mac --arm64 --publish never
  
      - name: üßæ Copy LICENSE into both builds
        run: |
          mkdir -p dist/mac-x64
          mkdir -p dist/mac-arm64
          cp LICENSE dist/mac-x64/LICENSE || echo "Skipping LICENSE copy for mac-x64"
          cp LICENSE dist/mac-arm64/LICENSE || echo "Skipping LICENSE copy for mac-arm64"
  
      - name: üîÄ Merge to Universal binary
        run: npx electron-builder --mac --universal
  
      - name: üì§ Upload macOS universal DMG
        uses: actions/upload-artifact@v4
        with:
          name: mac-universal-app
          path: dist/*.dmg

      - name: Publish macOS release
        if: github.ref == 'refs/heads/main'
        run: npx electron-builder --mac --universal --publish always
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build-win:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build app for Windows (exe)
        run: npx electron-builder --win --publish never

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: dist/*.exe

      - name: Publish Windows release
        if: github.ref == 'refs/heads/main'
        run: npx electron-builder --win --publish always
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
